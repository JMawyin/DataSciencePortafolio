#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os

import dash
import dash_table
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output
import pandas as pd
import plotly.graph_objs as go
from dash_table import DataTable
import dash_bootstrap_components as dbc


from chart_studio.plotly import plot, iplot
import numpy as np
import plotly
import chart_studio
import chart_studio.plotly as py
from chart_studio.plotly import iplot
import plotly.offline as offline
chart_studio.tools.set_credentials_file(username='JMawyin', api_key='dVsYl2tiVcuatLpgjJjA')
shaz13_custom_style = "mapbox://styles/shaz13/cjiog1iqa1vkd2soeu5eocy4i"
Token = "pk.eyJ1Ijoiam1hd3lpbiIsImEiOiJjazg4OGp0NDYwMmdwM2dxcHUxNWRhYzZyIn0.MCCGSyF0KPdvun3rTob3dw"

external_stylesheets = [dbc.themes.BOOTSTRAP]

app = dash.Dash(__name__, external_stylesheets=external_stylesheets)

external_css = ['https://codepen.io/chriddyp/pen/bWLwgP.css']
for css in external_css:    app.css.append_css({"external_url": css})

colors = {
    'background': '#111111',
    'text': '#7FDBFF'
}

#Loading Data

Average_Hour_Day = pd.read_csv("https://raw.githubusercontent.com/JMawyin/MSDS2020-608/master/United_dayHour.csv")


intro = '''Managing electricity demand is important in an evolving generatio/demand landscape where more electricity is generated by non-traditional plants such solar and wind farms. Shifting demand in time to when electricity is generated from renewable sources will be of increasing need in the future.
A study took place between 2011 to 2014 in the UK to study how residential consumers would react to knowing in advance the price of electricity. More than 1100 homes were recruited in a project to receive day-ahead pricing notificiation, registered in a half-hourly pricing scheme and given monthly feedback on their consumption patterns. These consumer were joined by 4500 households that did not receive any pricing or feedback information and had fixed daily electricity pricing.
'''
markdown_text1 = '''
### Research Question 1:
##### What is the effect....
'''




app.layout = html.Div(
    [
    html.H1('DATA 608 : Final Project', style={'backgroundColor':'black', 'color': 'white'}),
    html.H3('Jose A. Mawyin', style={'backgroundColor':'grey', 'color': 'white'}),
    dcc.Markdown(children=intro),
    dcc.Markdown(children=markdown_text1),

    html.Label('Select an Acorn Group to Populate Graph: '),
    dcc.Dropdown(id='dropdown1', options=[
        {'label': i, 'value': i} for i in Average_Hour_Day.Acorn_group.unique()
    ], multi=False, placeholder='Filter by boroname...'),
    html.Div(
        id='Bar1'
    ),

    html.Div(style={'textAlign':'center'},children='''        Jose A. Mawyin 2020.    ''')
    ],style = {'width': '100%','padding-left':'15%', 'padding-right':'15%'}
)

@app.callback(Output('Bar1', 'children'),
              [Input('dropdown1', 'value')])
def update_figure(value):
    if value is None:
        dff = Average_Hour_Day
    else:
        dff = Average_Hour_Day.loc[Average_Hour_Day["Acorn_group"] == value]
    return html.Div(
            dcc.Graph(
                id='bar chart',
                figure={
                    "data": [
                        {
                            "x": dff["hour"],
                            "y": dff["N"],
                            "type": "bar",
                            "marker": {"color": "#0074D9"},
                        }
                    ],
                    "layout": {
                        'title': 'Basic Dash Example',
                        "xaxis": {"title": "Authors"},
                        "yaxis": {"title": "Counts"},
                        'plot_bgcolor': colors['background'],
                        'paper_bgcolor': colors['background']
                    },
                },
            )
    )

if __name__ == '__main__':
    app.run_server()








